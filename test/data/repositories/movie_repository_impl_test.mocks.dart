// Mocks generated by Mockito 5.2.0 from annotations
// in movie_app_clean_architecture_mvvm/test/data/repositories/movie_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app_clean_architecture_mvvm/src/core/core.dart' as _i5;
import 'package:movie_app_clean_architecture_mvvm/src/data/data.dart' as _i3;
import 'package:movie_app_clean_architecture_mvvm/src/domain/entities/movie_client.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMovieClient_0 extends _i1.Fake implements _i2.MovieClient {}

class _FakePopularMovieResponseModel_1 extends _i1.Fake
    implements _i3.PopularMovieResponseModel {}

class _FakeUpcomingMoviesResponseModel_2 extends _i1.Fake
    implements _i3.UpcomingMoviesResponseModel {}

/// A class which mocks [MovieApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieApiService extends _i1.Mock implements _i3.MovieApiService {
  MockMovieApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieClient get movieClient =>
      (super.noSuchMethod(Invocation.getter(#movieClient),
          returnValue: _FakeMovieClient_0()) as _i2.MovieClient);
  @override
  set movieClient(_i2.MovieClient? _movieClient) =>
      super.noSuchMethod(Invocation.setter(#movieClient, _movieClient),
          returnValueForMissingStub: null);
  @override
  _i4.Future<_i3.PopularMovieResponseModel> getPopularMoviesFromApiService(
          _i5.MoviesPopularRequestParams? params) =>
      (super.noSuchMethod(
              Invocation.method(#getPopularMoviesFromApiService, [params]),
              returnValue: Future<_i3.PopularMovieResponseModel>.value(
                  _FakePopularMovieResponseModel_1()))
          as _i4.Future<_i3.PopularMovieResponseModel>);
  @override
  _i4.Future<_i3.UpcomingMoviesResponseModel> getUpcomingMoviesFromApiService(
          _i5.MovieUpcomingRequestParams? params) =>
      (super.noSuchMethod(
              Invocation.method(#getUpcomingMoviesFromApiService, [params]),
              returnValue: Future<_i3.UpcomingMoviesResponseModel>.value(
                  _FakeUpcomingMoviesResponseModel_2()))
          as _i4.Future<_i3.UpcomingMoviesResponseModel>);
}
