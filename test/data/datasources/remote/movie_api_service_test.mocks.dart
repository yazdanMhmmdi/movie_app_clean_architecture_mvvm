// Mocks generated by Mockito 5.2.0 from annotations
// in movie_app_clean_architecture_mvvm/test/data/datasources/remote/movie_api_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app_clean_architecture_mvvm/src/data/data.dart' as _i5;
import 'package:movie_app_clean_architecture_mvvm/src/domain/entities/movie_client.dart'
    as _i3;
import 'package:retrofit/retrofit.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHttpResponse_0<T> extends _i1.Fake implements _i2.HttpResponse<T> {}

/// A class which mocks [MovieClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieClient extends _i1.Mock implements _i3.MovieClient {
  MockMovieClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<_i5.PopularMovieResponseModel>> fetchPopularMovies(
          {String? apiKey, String? page, String? language, String? sortBy}) =>
      (super.noSuchMethod(
              Invocation.method(#fetchPopularMovies, [], {
                #apiKey: apiKey,
                #page: page,
                #language: language,
                #sortBy: sortBy
              }),
              returnValue:
                  Future<_i2.HttpResponse<_i5.PopularMovieResponseModel>>.value(
                      _FakeHttpResponse_0<_i5.PopularMovieResponseModel>()))
          as _i4.Future<_i2.HttpResponse<_i5.PopularMovieResponseModel>>);
  @override
  _i4.Future<_i2.HttpResponse<_i5.UpcomingMoviesResponseModel>> fetchUpcomingMovies(
          {String? page, String? language, String? apiKey}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchUpcomingMovies, [],
              {#page: page, #language: language, #apiKey: apiKey}),
          returnValue:
              Future<_i2.HttpResponse<_i5.UpcomingMoviesResponseModel>>.value(
                  _FakeHttpResponse_0<_i5.UpcomingMoviesResponseModel>())) as _i4
          .Future<_i2.HttpResponse<_i5.UpcomingMoviesResponseModel>>);
}
